#!/usr/bin/env bash

## Explore Therapist Signup Bucket in Alpha
#
# Use:
#
#     alpha_signup_files [UUID]
function alpha_signup_files() {
  setaws alpha

  s3ls "luna-alpha-workloads-therapist-signup/$1/"
}

## Explore Therapist Signup Bucket in Omega
#
# Use:
#
#     omega_signup_files [UUID]
function omega_signup_files() {
  setaws omega

  s3ls "luna-omega-workloads-therapist-credentialing/$1/"
}

## Print the installed gem version
#
# Use:
#     cat_gemfile [GEM_NAME]
function cat_gemfile() {
  cat Gemfile.lock | grep $1
}

## Log into service Pod
#
# Example:
#
#     alpha_service_pod forms [POD_ID]
function alpha_service_pod() {
  service_name=$1
  service_id=$2
  valid_services="forms, therapists, dashboard, edge, marketplace"

  case $service_name in
    forms)
      kubectl exec -it -n patient-forms-backend "patient-forms-backend-$service_id" -- sh
      ;;
    therapists)
      kubectl exec -it -n therapist-credentialing-backend "therapist-credentialing-backend-$service_id" -- sh
      ;;
    dashboard)
      kubectl exec -it -n physician-portal "physician-portal-$service_id" -- sh
      ;;
    edge)
      kubectl exec -it -n backend "backend-$service_id" -- sh
      ;;
    marketplace)
      kubectl exec -it -n marketplace "marketplace-$service_id" -- sh
      ;;
    *)
      echo -e "Valid services are:\n $valid_services"
      ;;
  esac
}

## Copy Omega Therapist Signup files to local folder
#
# Use:
#
#     omega_copy_signup_files [UUID] [FILE_NAME]
function omega_copy_signup_files() {
  setaws omega

  s3cp "s3://luna-omega-workloads-therapist-credentialing/$1/$2" "$HOME/Downloads/$1/"
}

## Copy Alpha Therapist Signup files to local folder
#
# Use:
#
#     alpha_copy_signup_files [UUID] [FILE_NAME]
function alpha_copy_signup_files() {
  setaws alpha

  s3cp "s3://luna-alpha-workloads-therapist-signup/$1/$2" "$HOME/Downloads/$1/"
}

## Kills rails server on port 3000
function matar_servidor_rails() {
  kill -9 $(lsof -i tcp:3000 -t)
}

## Create a local dump from remote DB URL with pg_dump
#
# Call the function with the connection URL as an argument:
#
#     create_edge_local_dump "postgres://luna_api:Z2N5a7c0M*9bAAwSImLZj*qvrBcarR@dev-francisco-alpha-edge-10-07t14-09.ctvhkhbiykgu.us-west-2.rds.amazonaws.com:5432/luna_api_staging"
function create_edge_local_dump() {
  url=$1

  current_date=$(date +'%Y_%m_%d')

  user=$(echo $url | sed -E 's/^postgres:\/\/([^:]+):.*@.*$/\1/')
  password=$(echo $url | sed -E 's/^postgres:\/\/[^:]+:([^@]+)@.*$/\1/')
  host=$(echo $url | sed -E 's/^postgres:\/\/[^@]+@([^:]+):.*$/\1/')
  port=$(echo $url | sed -E 's/^postgres:\/\/[^@]+@[^:]+:([0-9]+)\/.*$/\1/')
  dbname=$(echo $url | sed -E 's/^postgres:\/\/[^@]+@[^\/]+\/(.*)$/\1/')

  output_path="~/Downloads/edge_dump_alpha_$current_date"

  # echo $user
  # echo $password
  # echo $host
  # echo $port
  # echo $dbname
  # echo $output_path

  PGPASSWORD=$password pg_dump -h $host -U $user -p $port -f $output_path $dbname
}
