#!/usr/bin/env bash

## Explore Therapist Signup Bucket in Alpha
#
# Use:
#
#     alpha_signup_files [UUID]
function alpha_signup_files() {
  setaws alpha

  s3ls "luna-alpha-workloads-therapist-signup/$1/"
}

## Explore Therapist Signup Bucket in Omega
#
# Use:
#
#     omega_signup_files [UUID]
function omega_signup_files() {
  setaws omega

  s3ls "luna-omega-workloads-therapist-credentialing/$1/"
}

## Print the installed gem version
#
# Use:
#     cat_gemfile [GEM_NAME]
function cat_gemfile() {
  cat Gemfile.lock | grep $1
}

## Log into service Pod
#
# Example:
#
#     alpha_service_pod forms [POD_ID]
function alpha_service_pod() {
  service_name=$1
  service_id=$2
  valid_services="forms, therapists, dashboard, edge, marketplace"

  case $service_name in
    forms)
      kubectl exec -it -n patient-forms-backend "patient-forms-backend-$service_id" -- sh
      ;;
    therapists)
      kubectl exec -it -n therapist-credentialing-backend "therapist-credentialing-backend-$service_id" -- sh
      ;;
    dashboard)
      kubectl exec -it -n physician-portal "physician-portal-$service_id" -- sh
      ;;
    edge)
      kubectl exec -it -n backend "backend-$service_id" -- sh
      ;;
    marketplace)
      kubectl exec -it -n marketplace "marketplace-$service_id" -- sh
      ;;
    *)
      echo -e "Valid services are:\n $valid_services"
      ;;
  esac
}

## Copy Omega Therapist Signup files to local folder
#
# Use:
#
#     omega_copy_signup_files [UUID] [FILE_NAME]
function omega_copy_signup_files() {
  setaws omega

  s3cp "s3://luna-omega-workloads-therapist-credentialing/$1/$2" "$HOME/Downloads/$1/"
}

## Copy Alpha Therapist Signup files to local folder
#
# Use:
#
#     alpha_copy_signup_files [UUID] [FILE_NAME]
function alpha_copy_signup_files() {
  setaws alpha

  s3cp "s3://luna-alpha-workloads-therapist-signup/$1/$2" "$HOME/Downloads/$1/"
}

## Kills rails server on port 3000
function matar_servidor_rails() {
  kill -9 $(lsof -i tcp:3000 -t)
}

# Convierte un hash de Ruby con credenciales de create_new_auth
#
# Ejemplo:
#
#    json='{
#      "access-token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyZjNhNjc5MC1hNjI0LTQ0YWItODE4ZS1hYTk2MWJiMWViODIiLCJpYXQiOjE3NDEyODA4NDd9.acO4EryHIlzhmfAlIXjMxF8lVwjscsabWa7qYW31Y4w",
#      "token-type": "Bearer",
#      "client": "uMHhLsQsHE9VBahFfOQ_Kw",
#      "expiry": "1801280847",
#      "uid": "demo+staging26@koombea.com",
#      "Authorization": "Bearer eyJhY2Nlc3MtdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlKOS5leUp6ZFdJaU9pSXlaak5oTmpjNU1DMWhOakkwTFRRMFlXSXRPREU0WlMxaFlUazJNV0ppTVdWaU9ESWlMQ0pwWVhRaU9qRTNOREV5T0RBNE5EZDkuYWNPNEVyeUhJbHpobWZBbElYak14RjhsVndqc2NzYWJXYTdxWVczMVk0dyIsInRva2VuLXR5cGUiOiJCZWFyZXIiLCJjbGllbnQiOiJ1TUhoTHNRc0hFOVZCYWhGZk9RX0t3IiwiZXhwaXJ5IjoiMTgwMTI4MDg0NyIsInVpZCI6ImRlbW8rc3RhZ2luZzI2QGtvb21iZWEuY29tIn0="
#    }'
#
#    headers_from_json "$json"
function headers_from_json() {
  local json_input="$1"

  # 1. Convertir hash de Ruby a JSON vÃ¡lido
  json=$(echo "$json_input" | sed -E 's/=>/:/g' | jq '.' 2>/dev/null)

  if [[ $? -ne 0 ]]; then
    echo "Error: El hash no tiene el formato correcto." >&2
    return 1
  fi

  # 2. Convertir JSON en formato de cabeceras HTTP
  echo "$json" | jq -r 'to_entries[] | "\(.key):\(.value)"'
}
